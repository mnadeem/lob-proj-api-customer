server.port=8091

spring.application.name=Customer API

# MySQL DB
spring.datasource.url=jdbc:mysql://${DB_SERVER}:${DB_PORT}/${DB_NAME}
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASS}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA
#spring.jpa.database-platform=org.hibernate.dialect.MySQL5Dialect
#spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect4
spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.show-sql=true
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=update
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
#spring.jpa.properties.hibernate.type=trace
#spring.jpa.properties.hibernate.show_sql=true
#spring.jpa.properties.hibernate.format_sql=true
#spring.jpa.properties.hibernate.use_sql_comments=false


# Envers
spring.jpa.properties.org.hibernate.envers.audit_table_suffix=_AUD
spring.jpa.properties.org.hibernate.envers.revision_field_name=REVISION_ID
spring.jpa.properties.org.hibernate.envers.revision_type_field_name=REVISION_TYPE

## default connection pool
spring.datasource.hikari.connectionTimeout=20000
spring.datasource.hikari.maximumPoolSize=5
#spring.datasource.hikari.connection-test-query=SELECT 1
#spring.datasource.hikari.minimum-idle=5 
#spring.datasource.hikari.maximum-pool-size=20
#spring.datasource.hikari.idle-timeout=600000 
#spring.datasource.hikari.max-lifetime=1800000 
#spring.datasource.hikari.auto-commit=true
#spring.datasource.hikari.poolName=SpringBoot-HikariCP

# RabbitMQ
spring.rabbitmq.host=${RMQ_HOST}
spring.rabbitmq.port=${RMQ_PORT}
spring.rabbitmq.username=${RMQ_USER}
spring.rabbitmq.password=${RMQ_PASS}

#spring.rabbitmq.listener.type=simple
#spring.rabbitmq.listener.simple.prefetch=1
#spring.rabbitmq.listener.simple.max-concurrency=8
#spring.rabbitmq.listener.simple.concurrency=8

rabbitmq.batch-process.dg.exchange=lob_proj_direct
rabbitmq.batch-process.triggered.routingkey=batch_process.event.triggered
rabbitmq.batch_process.triggered.queue=batch_process.triggered.queue

# Samba
samba.share.server=${SMB_SERVER}
samba.share.user=${SMB_USER}
samba.share.password=${SMB_PASSWORD}
samba.share.domain=${SMB_DOMAIN}
samba.share.name=${SMB_NAME}

# Batch job
# Disable auto run on jobs
spring.batch.job.enabled=false
spring.batch.jdbc.table-prefix=
spring.batch.jdbc.initialize-schema=ALWAYS

app.batch_process.job.name=batch-process.job
app.batch_process.copy.step=batch-process.copy
app.batch_process.read_write.step=batch-process.read_write
app.batch_process.delete_file.step=batch-process.delete_file

# Logging
logging.level.org.springframework.cloud.task=DEBUG
logging.level.com.org.lob=TRACE
